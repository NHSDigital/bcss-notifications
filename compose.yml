services:
  oracle:
    container_name: oracle
    image: gvenzl/oracle-free:latest
    ports:
      - "1521:1521"
    environment:
      ORACLE_PASSWORD: password
      APP_USER: mpi_notify_user
      APP_USER_PASSWORD: test
    healthcheck:
      test: ["CMD", "healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    volumes:
      - ./tests/db/schema.sql:/container-entrypoint-initdb.d/my-init.sql:ro
    profiles:
      - dev
      - integration
      - end-to-end

  batch-notification-processor-lambda:
    container_name: "batch-notification-processor-lambda"
    build:
      context: ./batch_notification_processor/
      additional_contexts:
        root_dir: .
      dockerfile: Dockerfile
    ports:
      - "9000:8080"
    depends_on:
      communication-management-api-stub:
        condition: service_started
      oracle:
        condition: service_healthy
    environment:
      - API_KEY=${API_KEY}
      - APPLICATION_ID=${APPLICATION_ID}
      - COMMGT_BASE_URL=http://communication-management-api-stub:8888
      - DATABASE_USER=mpi_notify_user
      - DATABASE_PASSWORD=test
      - DATABASE_SID=FREEPDB1
      - DATABASE_HOST=oracle
      - DATABASE_PORT=1521
      - SCHEDULER_STUB_URL=http://scheduler-stub:8889/schedule
      - OAUTH_API_KID=${OAUTH_API_KID}
      - OAUTH_API_KEY=${OAUTH_API_KEY}
      - OAUTH_TOKEN_URL=${OAUTH_TOKEN_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - REGION_NAME=${REGION_NAME}
      - SCHEDULE_STATUS_CHECK_MINUTES=${SCHEDULE_STATUS_CHECK_MINUTES}
      - SECRET_ARN=${SECRET_ARN}
    profiles:
      - dev
      - end-to-end

  message-status-handler-lambda:
    container_name: "message-status-handler-lambda"
    build:
      context: ./message_status_handler
      additional_contexts:
        root_dir: .
      dockerfile: Dockerfile
    ports:
      - "9001:8080"
    depends_on:
      communication-management-api-stub:
        condition: service_started
      oracle:
        condition: service_healthy
    environment:
      - API_KEY=${API_KEY}
      - APPLICATION_ID=${APPLICATION_ID}
      - COMMGT_BASE_URL=http://communication-management-api-stub:8888
      - DATABASE_USER=mpi_notify_user
      - DATABASE_PASSWORD=test
      - DATABASE_SID=FREEPDB1
      - DATABASE_HOST=oracle
      - DATABASE_PORT=1521
      - SCHEDULER_STUB_URL=http://scheduler-stub:8889/schedule
      - OAUTH_API_KID=${OAUTH_API_KID}
      - OAUTH_API_KEY=${OAUTH_API_KEY}
      - OAUTH_TOKEN_URL=${OAUTH_TOKEN_URL}
      - PRIVATE_KEY=${PRIVATE_KEY}
      - REGION_NAME=${REGION_NAME}
      - SCHEDULE_STATUS_CHECK_MINUTES=${SCHEDULE_STATUS_CHECK_MINUTES}
      - SECRET_ARN=${SECRET_ARN}
    profiles:
      - dev
      - end-to-end

  communication-management-api-stub:
    container_name: "communication-management-api-stub"
    build:
      context: ./tests/end_to_end/communication_management_api_stub/
      additional_contexts:
        root_dir: .
      dockerfile: Dockerfile
    ports:
      - "8888:8888"
    profiles:
      - dev
      - end-to-end

  scheduler-stub:
    container_name: "scheduler-stub"
    build:
      context: ./tests/end_to_end/scheduler_stub/
      additional_contexts:
        root_dir: .
      dockerfile: Dockerfile
    environment:
      - API_KEY=${API_KEY}
      - APPLICATION_ID=${APPLICATION_ID}
      - COMMGT_BASE_URL=http://communication-management-api-stub:8888
      - DATABASE_USER=mpi_notify_user
      - DATABASE_PASSWORD=test
      - DATABASE_SID=FREEPDB1
      - DATABASE_HOST=oracle
      - DATABASE_PORT=1521
      - REGION_NAME=${REGION_NAME}
      - SECRET_ARN=${SECRET_ARN}
    ports:
      - "8889:8889"
    profiles:
      - end-to-end

  end-to-end-tests:
    build:
      context: ./tests/end_to_end/runner/
      additional_contexts:
        root_dir: .
      dockerfile: Dockerfile
    depends_on:
      communication-management-api-stub:
        condition: service_started
      oracle:
        condition: service_healthy
      batch-notification-processor-lambda:
        condition: service_started
      scheduler-stub:
        condition: service_started
    network_mode: host
    environment:
      - API_KEY=${API_KEY}
      - APPLICATION_ID=${APPLICATION_ID}
      - COMMGT_BASE_URL=http://localhost:8888
      - DATABASE_USER=mpi_notify_user
      - DATABASE_PASSWORD=test
      - DATABASE_SID=FREEPDB1
      - DATABASE_HOST=localhost
      - DATABASE_PORT=1521
    profiles:
      - end-to-end
